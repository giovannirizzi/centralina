Il comando switch del per hub e timer funzionano che switchano i filgi perché fanno il mirroning
anche lo stato di hub e timer è il loro stato più quello dei figli perché fanno il mirroning

il comando switch della centralina è diverso, perché deve accettare anche l'id. Quindi magari è meglio
cambiare il nome tipo in switchdevice. Se l'id è quello della centralina il comando agisce sullo stato della centralina
se la centralina è spenta il comamndo switchdevice non deve funzionare.
La centralina dovrà avere anche un comando setdevice per settare i registri degli altri device (di fridge o timer). Il timer però
non fa il mirroning dei registri, ha i suoi quindi una set su un timer setta i registri del timer anche se il timer ha come gli un
frigo.

Il comando set può essere comune a tutti i device, per i dispositivi di controllo sarà uguale a meno che non si voglia
che una set su di un hub faccia la set del registro su tutti i gli di quell'hub. (solo fridge nel nostro caso)

Per il timer bisonga aggiunge almeno un registro settabile per indicare che interruttore modificare al begin del timer, eveutualmente
un altro registro per l'end.4

Lo stato e i registri di hub e switch dipendono dai filgi invece quelli della centralina no, hanno conseguenzei comandi getinfo

la add sarà comune a tutti e 3 i dipositivi di controllo pero hub e timer dovranno implementare un comando extra di canadd
per dire se è possibile fare una add su quel dispositivo. La shell prima di fare una add manda un canadd...

TODO:
- finire funzioni per i registri del frigo (percentuale e temperatura)
- finire i registri del timer
- all'inizio il controller deve creare la cartelle /tmp/centralina e /tmp/centarlina/devices vedere funzione mkdir
- implementare il comando canadd <type> per timer e hub che restituiscono yes se è possibile aggiungere un figlio con quel tipo, altrimenti restituiscono il perché non è possibile.
- comando unlink della shell da fare dopo il comando link: rimuove un dispositivo che è linkato a qualcosa e lo ricea non collegato a niente come add_device della centralina. Quindi getconf dispositivo, del dispositivo, add_device e setconf
- comando set della shell
- comandi getinfo, switch e set dei control devices
- far funzionare su tutti i dipositivi i segnali del manualcontrol


Tutti i dispositivi anche la centralina hanno:
    un id
    uno stato
    dei registri
    degli interruttori.
    
I dispositivi di controllo hanno in più anche un array di pipe per parlare con i figli.
    
    

COMANDI DA IMPLEMENTARE:

[Richiesta]                                 [Risposta]
del                                         <id> <id> <id> : lista dei dispositivi eliminati, se il dispositivo è di iterazione
                                                            restituirà solo il suo, altrimenti tutto l'albero.
                                                            
info                      void                  <info> da definire bene il formato, però deve restituire: PID, id, tipo, stato, registri,
                                            dispositivi direttamente connessi se presenti? (oppure tutto l'albero però boh)
                                            
setconf <config>                            OK / ERROR: setta la configurazione del dispositivo

formato <config>: id:%d;type:%d;state:%d;reg:time=%d&bobobo=%d

getconf                                     <config> | <config> | | <config>.. : restituisce la configurazione del dispositivo compresi i figli,
                                            il simbolo | serve come carattere per serializzare l'albero -> andate a vedere come si serializza un albero.
getpid                                      <pid>
                                            
                                            
add <config> | <config>...                  OK / ERROR: aggiungere l'albero ad un dispositivo di controllo.


quando si esegue il programma centralina, il processo esegue subito la fork e il figlio funzionerà come dispositivo di controllo, quindi prende i comandi da stdin che sarà
la pipe con il processo padre. Il padre ascolta invece i comandi della shell.


SHELL sistema:

    la shell ha una lista di FILE* che corrispondono alle FIFO di tutti i device collegati al sistema.
    La shell parla hai dispositivi solo tramite FIFO e riceve la risposta nella sua FIFO
    
    add <device>
    Aggiunge un device e gli assegna una id unico 
    
    del <id>
    Manda il comando di del nella FIFO e rimuove il dispositivo dalla lista
    
    link <id1> to <id2>
    Manda il comando getconfig ad <id1>, del ad <id1>, add <config> ad <id2>
    
    info <id>
    Manda il comamndo info al dispositivo id tramite FIFO e aspetta la risposta.
    
    list
    Manda il comando info a tutti i dispositivi nella lista
    
    switch <id> <label> power_signalpower_signal<pos>
    Inoltra il comando alla centralina
    
    set <id> <registro> <value>                                    
    

Device (Comandi di base che tutti i dispositivi devono implementare):

    setconf <config>|<config> .... (sequenze di config per rappresentare una albero) - FIFO ED STDIN
    getconf <config> <config> .... - FIFO ED STDIN
    info    restituisce anche il proprio PID - FIFO ED STDIN
    del     (Deve restituire la lista dei dispositivi eliminati) - FIFO ED STDIN
    
    Ogni device deve aprire in lettura la propria FIFO che sarà tipo /system/<id>, quindi l'id univoco
    del device bisogna passarlo come arg nel main.
    
    Ogni device accetta come parametri del main un id, il signalfd, e un flag che indica se aspettare il settagggio tramite comando
    oppure avviarsi con il settaggio di default.
    
Device di controllo:

    add <config> <config> FIFO ED STDIN
    
    
    Comando per interruttori a 2 posizioni:
        
        switch <id> <interrutore> <pos> STDIN
        
    Comando per settare i valori nei registri ad esempio per il termostato
    
        set <id> <registro> <value> STDIN
    
  
Device di iterazione:

    Comando per interruttori a 2 posizioni:
        
        switch <interrutore> <pos> STDIN
        
    Comando per settare i valori nei registri ad esempio per il termostato
    
        set <registro> <value> STDIN
        
Funzioni per implementare il tempo di accensione di lamadine: timer_create, timer_settime
        
        
Centralina:
    Segnali:
        per interruttore generale forse?
    Comandi:
        non deve eseguire comandi
    Registro:
        num: numero di dispositivi direttamente connessi
    Stato:
        on/off
    interruttore:
        generale on/off, cosa fa? invia power off/on a tutti i collegati?, viene modificato al comando switch 
        

Bulb:
    Segnali: 
        1 segnale per on/off stato
    Comandi:
        interruttori: 
            set on/off interruttore -> da risposta??
        get info -> da in risposta info
        delete?
    Registro
        time: tempo di utilizzo. come lo calcolo??
        
Hub:
    Segnali: 
        no iterazioni al di fuori della centralina...? fa il mirroring degli interruttori...
    Comandi:
        interruttori: 
            boh fa il mirroring, tutti i comandi che riceve li invia ha i figli?
        get info -> da in risposta info anche in base hai figli
        delete? penso di si perché deve eliminare ricorsivamente i figli
        link per collegare altri dispositivi
    Registro:
        mirroring dei figli, cosa vuol dire??
    Stato:
        mirroring dei filgi, lo calcola on/off con ovverride eventualmente
    
Windows:
    
    Segnali: 
        1  per aprire
        1 per chiudere
    Comandi:
        interruttori: 
            set open on/off
            set close on/off
        get info -> da in risposta info
        delete?
    Registro
        time: tempo di utilizzo. come lo calcolo??
    Args per inizializzazione:
        id ?? per named pipe eventualmente
        stato
        registro
        
Frigo:
    Segnali: 
        1 segnale per on/off stato
        1 segnale per aggiungere e togliere contenuto!?
        1 impostare termostato
    Comandi:
        interruttori: 
            set on/off interruttore
            set temp valore
        get info -> da in risposta info
        delete?
    Registro
        time: tempo di apertura. come lo calcolo?
        ​delay​ = tempo dopo cui si richiude automaticamente (la posso modificare)
​        perc​ = percentuale di riempimento (la modifico solo con intervento manuale)
​        temp​ = temperatura interna

    Args per inizializzazione:
        id ?? per named pipe eventualmente
        stato
        registro
        
Timer:
    
    funzioni per gestire il time: strptime e strftime